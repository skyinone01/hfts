<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Statistics">
    <resultMap id="BaseResultMap" type="com.ug369.backend.service.entity.mysql.Statistics">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="VARCHAR"/>
        <result column="userId" property="userId" jdbcType="INTEGER"/>
        <result column="moduleName" property="moduleName" jdbcType="VARCHAR"/>
        <result column="moduleId" property="moduleId" jdbcType="INTEGER"/>
        <result column="terminalType" property="terminalType" jdbcType="INTEGER"/>
        <result column="logType" property="logType" jdbcType="BIGINT"/>
        <result column="loginDate" property="loginDate" jdbcType="VARCHAR"/>
        <result column="quitDate" property="quitDate" jdbcType="VARCHAR"/>
        <result column="deviceToken" property="deviceToken" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="TotalMap" type="com.ug369.backend.service.entity.mysql.TotalStatistics">
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="AgeMap" type="com.ug369.backend.service.entity.mysql.UserAgeStatistics">
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="DeviceMap" type="com.ug369.backend.service.entity.mysql.UserDeviceStatistics">
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ModuleMap" type="com.ug369.backend.service.entity.mysql.UserModuleStatistics">
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="SexMap" type="com.ug369.backend.service.entity.mysql.UserModuleStatistics">
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="UserCountMap" type="com.ug369.backend.service.entity.mysql.UserCountStatistics">
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="UserMap" type="com.ug369.backend.service.entity.mysql.UserCountStatistics">
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>


    <select id="selectTotal" resultMap="TotalMap">
        select deviceType type, count(1) count
        from yg_user_info a
        left outer join yg_user_base_info b on a.user_id = b. user_id
        group by deviceType

        union all

        select 2 type, count(user_id) count from yg_user_info where DATE_FORMAT(userCreateTime,'%Y-%m-%d') = DATE_FORMAT(CURDATE(),'%Y-%m-%d')

        union all

        select 3 type, count(*) count from yg_user_info a left outer join yg_user_base_info b on a.user_id = b.user_id

        union all

        select user_sex type, count(1) count
        from yg_user_info a
        left outer join yg_user_base_info b on a.user_id = b. user_id
        group by user_sex

        union all

        select 0 type, count(user_qq_openid) count
        from yg_user_info a
        left outer join yg_user_base_info b on a.user_id = b. user_id

        union all

        select 1 type, count(user_weixin_openid) count
        from yg_user_info a
        left outer join yg_user_base_info b on a.user_id = b. user_id
    </select>

    <!--年龄-->
    <select id="selectAge" parameterType="hashmap" resultMap="AgeMap">
        select b.age,sum(case when a.AgeType is not null then 1 else 0 end) as 'count' from (select userCreateTime,user_birthday,@age:=DATE_FORMAT(FROM_DAYS(TO_DAYS(b.userCreateTime)-TO_DAYS(user_birthday)),'%Y') + 1,
        case
        when   30 > @age  then 30
        when   @age>=30 and 40>@age then 40
        when   @age>=40 and 50>@age then 50
        when   @age>=50 and 60>@age then 60
        when   @age>=60 and 70>@age then 70
        when   @age>=70 and 80>@age then 80
        when   @age>=80 then 90
        end as AgeType from yg_user_base_info a inner join yg_user_info b on a.user_id=b.user_id where
        userCreateTime is not null and user_birthday is not null
        <if test="startDate !='' and startDate != null and endDate !='' and endDate != null">
            AND userCreateTime BETWEEN ${startDate} AND ${endDate}
        </if>
        order by AgeType ) a
        right join ( select 30 as age union select 40 as age union select 50 as age union select 60 as age union select 70 as age union select 80 as age union select 90 as age) b
        on b.age=a.AgeType
        group by age
    </select>

    <!--年龄-->
    <select id="selectAgeType" resultMap="AgeMap">
        select count(0) 'count' from yg_user_base_info
        where
        30 > ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1)

        union all

        select count(0) 'count' from yg_user_base_info
        where
        ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1) >= 30
        and
        40 >ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1)

        union all

        select count(0) 'count' from yg_user_base_info
        where
        ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1) >= 40
        and
        50 >ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1)

        union all

        select count(0) 'count' from yg_user_base_info
        where
        ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1) >= 50
        and
        60 > ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1)

        union all

        select count(0) 'count' from yg_user_base_info
        where
        ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1) >= 60
        and
        70 > ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1)

        union all

        select count(0) 'count' from yg_user_base_info
        where
        ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1) >= 70
        and
        80 > ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1)

        union all

        select count(0) 'count' from yg_user_base_info
        where
        ifnull(DATE_FORMAT(FROM_DAYS(TO_DAYS(NOW())-TO_DAYS( user_birthday)),'%Y') + 1, 1) >= 80

    </select>

    <!--机型-->
    <select id="selectDevice" resultMap="DeviceMap">
        SELECT
            deviceType type ,
            count(1) count
        FROM
            yg_user_base_info
        WHERE
            model_number IS NOT NULL
        GROUP BY
            deviceType
        ORDER BY
            count DESC
   </select>

    <!--pv-->
    <select id="selectModule" resultMap="ModuleMap">
        SELECT
        count(id) count ,
        a.moduleName type
        FROM
        yg_sys_uservisitlog a
        WHERE
        a.moduleId IS NOT NULL
        AND a.moduleName IS NOT NULL
        AND a.logType = 'moduleStats'
        <if test="null != startDate and null != endDate">
            AND createTime BETWEEN #{startDate} AND #{endDate}
        </if>
        GROUP BY
        a.moduleId ,
        a.moduleName
        ORDER BY
        count DESC
        limit 20
    </select>
    
    
    <select id="selectPvModule" parameterType="hashmap" resultMap="ModuleMap">
        SELECT
        count(id) count ,
        a.moduleName type
        FROM
        yg_sys_uservisitlog a
        WHERE
        a.moduleName IS NOT NULL
        AND a.logType = 'moduleStats'
        <if test="year != '' ">
            AND YEAR(createTime) = #{year}
        </if>
        <if test="month != '' ">
            AND MONTH(createTime) = #{month}
        </if>
        <if test="day != '' ">
            AND DAY(createTime) = #{day}
        </if>
        GROUP BY
        a.moduleId ,
        a.moduleName
        ORDER BY
        count DESC
        limit 20
    </select>
    
    <!--pv 年-->
    <select id="selectPvCountYear" parameterType="hashmap" resultMap="UserCountMap">
        SELECT COUNT(1) AS COUNT , IFNULL(DATE_FORMAT( u.createTime , '%Y%m'), '其他') AS TYPE
        FROM yg_sys_uservisitlog u 
        <where>
        	<if test="startDate !='' and startDate != null and endDate !='' and endDate != null">
            	AND createTime BETWEEN #{startDate} AND #{endDate}
	        </if>
	        <if test="moduleName !='' and moduleName != null">
	            AND u.moduleName = #{moduleName}
	        </if>
        </where>
        
        GROUP BY DATE_FORMAT( u.createTime , '%Y%m')
        ORDER BY createTime ASC
    </select>
    
    <!--pv 月-->
    <select id="selectPvCountMonth" parameterType="hashmap" resultMap="UserCountMap">
        SELECT COUNT(1) AS COUNT , IFNULL(DATE_FORMAT( u.createTime , '%Y%m%d'), '其他') AS TYPE
        FROM yg_sys_uservisitlog u 
        <where>
        	<if test="startDate !='' and startDate != null and endDate !='' and endDate != null">
            	AND createTime BETWEEN #{startDate} AND #{endDate}
	        </if>
	        <if test="moduleName !='' and moduleName != null">
	            AND u.moduleName = #{moduleName}
	        </if>
        </where>
        GROUP BY DATE_FORMAT( u.createTime , '%Y%m%d')
        ORDER BY createTime ASC
    </select>
    
    <!--pv 日-->
    <select id="selectPvCountDay" parameterType="hashmap" resultMap="UserCountMap">
        SELECT COUNT(1) AS COUNT , IFNULL(DATE_FORMAT( u.createTime , '%Y%m%d%h'), '其他') AS TYPE
        FROM yg_sys_uservisitlog u 
        <where>
        	<if test="startDate !='' and startDate != null and endDate !='' and endDate != null">
            	AND createTime BETWEEN #{startDate} AND #{endDate}
	        </if>
	        <if test="moduleName !='' and moduleName != null">
	            AND u.moduleName = #{moduleName}
	        </if>
        </where>
        GROUP BY DATE_FORMAT( u.createTime , '%Y%m%d%h')
        ORDER BY createTime ASC
    </select>
    
    
    
    <!--pv 获取某一年所有月份统计信息-->
    <select id="selectPvCountYearByModule" parameterType="hashmap" resultMap="UserCountMap">
        SELECT MONTH(createTime) AS type,COUNT(1) as count FROM  yg_sys_uservisitlog AS d
		WHERE 1=1
        <if test="selectedYear !='' and selectedYear != null and selectedYear!='请选择'">
        AND YEAR(createTime) = #{selectedYear}
        </if>
        <if test="moduleName !='' and moduleName != null">
        AND d.`moduleName` = #{moduleName}
        </if>
		GROUP BY MONTH(createTime)
    </select>
    
    
    <!--pv 获取某一月所有天统计信息-->
    <select id="selectPvCountMonthByModule" parameterType="hashmap" resultMap="UserCountMap">
        SELECT DAY(createTime) AS type,COUNT(1) as count FROM  yg_sys_uservisitlog AS d
		WHERE 1=1
        <if test="selectedMonth !='' and selectedMonth != null and and selectedMonth!='请选择'">
        And MONTH(createTime) = #{selectedMonth}
        </if>
        <if test="moduleName !='' and moduleName != null">
        AND d.`moduleName` = #{moduleName}
        </if>
        <if test="selectedYear !='' and selectedYear != null and and selectedYear!='请选择'">
        AND YEAR(createTime) = #{selectedYear}
        </if>
		GROUP BY DAY(createTime)
    </select>
    
    <!--pv 获取某一天所有整点统计信息-->
    <select id="selectPvCountDayByModule" parameterType="hashmap" resultMap="UserCountMap">
        SELECT HOUR(createTime) AS type,COUNT(1) as count FROM  yg_sys_uservisitlog AS d
		WHERE 1=1
        <if test="selectedDay !='' and selectedDay != null  and selectedDay!='请选择'">
        AND DAY(createTime) = #{selectedDay}
        </if>
        <if test="moduleName !='' and moduleName != null">
        AND d.`moduleName` = #{moduleName}
        </if>
        <if test="selectedYear !='' and selectedYear != null and selectedYear!='请选择'">
        AND YEAR(createTime) = #{selectedYear}
        </if>
        <if test="selectedMonth !='' and selectedMonth != null and selectedMonth!='请选择'">
        AND MONTH(createTime) = #{selectedMonth}
        </if>
		GROUP BY HOUR(createTime)
    </select>

    <!--性别-->
    <select id="selectSex" resultMap="SexMap">
        select user_sex type, count(1) count
        from yg_user_info a
        <if test="null != startDate and null != endDate">
            where userCreateTime BETWEEN #{startDate} AND #{endDate}
        </if>
        left outer join yg_user_base_info b on a.user_id = b. user_id
        group by user_sex
    </select>

	<!--年龄 年-->
    <select id="selectUserCountYear" parameterType="hashmap" resultMap="UserCountMap">
        SELECT count(1) as count , DATE_FORMAT( u.userCreateTime , '%Y年%m月') as type
        from yg_user_info u
        where 1=1
        <if test="selectYear !='' and selectYear != null and selectYear !='请选择' ">
            AND year(u.userCreateTime)=#{selectYear}
        </if>
        GROUP BY DATE_FORMAT( u.userCreateTime , '%Y%m')
        ORDER BY userCreateTime asc;
    </select>
    
    <!--年龄 月-->
    <select id="selectUserCountMonth" parameterType="hashmap" resultMap="UserCountMap">
        SELECT count(1) as count , DATE_FORMAT( u.userCreateTime , '%d日') as type
        from yg_user_info u where 1=1
        <if test="selectYear !='' and selectYear != null and selectYear !='请选择'">
           AND year(u.userCreateTime)=#{selectYear}
        </if>
        <if test="selectMonth !='' and selectMonth != null and selectMonth !='请选择'">
           AND MONTH (u.userCreateTime)=#{selectMonth}
        </if>
        <if test="selectDay !='' and selectDay != null and selectDay !='请选择'">
           AND Day(u.userCreateTime)=#{selectDay}
        </if>
        GROUP BY DATE_FORMAT( u.userCreateTime , '%Y%m%d')
        ORDER BY userCreateTime asc;
    </select>

    <!--年龄 日-->
    <select id="selectUserCountDay" parameterType="hashmap" resultMap="UserCountMap">
        SELECT count(1) as count , DATE_FORMAT( u.userCreateTime , '%h时') as type
        from yg_user_info u where 1=1
        <if test="selectYear !='' and selectYear != null and selectYear !='请选择'">
            AND year(u.userCreateTime)=#{selectYear}
        </if>
        <if test="selectMonth !='' and selectMonth != null and selectMonth !='请选择'">
            AND MONTH (u.userCreateTime)=#{selectMonth}
        </if>
        <if test="selectDay !='' and selectDay != null and selectDay !='请选择'">
            AND Day(u.userCreateTime)=#{selectDay}
        </if>
        GROUP BY DATE_FORMAT( u.userCreateTime , '%Y%m%d%h')
        ORDER BY userCreateTime asc;
    </select>

    <select id="selectActiveUser" resultMap="UserMap">
        SELECT
        count(1) count ,
        b.user_name type
        FROM
        yg_sys_uservisitlog a
        LEFT OUTER JOIN yg_user_info b ON a.userId = b.user_id
        where b.user_name is not null
        GROUP BY
        a.userId
        order by count desc
        limit 5
    </select>

    <select id="selectActiveDevice" resultMap="UserMap">
        SELECT
            model_number type ,
            count(1) count
        FROM
            yg_user_base_info
        WHERE
            model_number IS NOT NULL
        GROUP BY
            model_number
        ORDER BY
            count DESC
        limit 5
    </select>

    <select id="selectActiveModule" resultMap="UserMap">
        SELECT
        count(1) count ,
        moduleName type
        FROM
        yg_sys_uservisitlog a
        where moduleName is not null
        GROUP BY
        moduleName
        order by count desc
        limit 5
    </select>

    <!--uv-->
    <select id="selectUv" resultMap="UserMap">
        SELECT
            count(DISTINCT userId) count ,
            DATE_FORMAT(createTime , '%Y年%m月%d日') type
        FROM
            yg_sys_uservisitlog
        WHERE
            moduleName = '生活日记'
        AND logType = 'moduleStats'
        GROUP BY
            DATE_FORMAT(createTime , '%Y年%m月%d日')
        HAVING
            count != 0
        AND type IS NOT NULL
        ORDER BY
            type ASC
    </select>
    
    <!-- uv -->
    <select id="selectUvCount" resultMap="UserMap">
    	<!-- 
        SELECT CONCAT(CONCAT(YEAR(createTime),"年"),CONCAT(MONTH(createTime),"月")) `type`,
		count(userId) `count`
		FROM yg_sys_uservisitlog
		WHERE userId IS NOT NULL AND createTime IS NOT NULL
		GROUP BY YEAR(createTime),
		MONTH(createTime) 
		-->
		
		SELECT CONCAT(CONCAT(YEAR(a.createDate),"年"),CONCAT(MONTH(a.createDate),"月")) `type`,
		SUM(a.userIdCount) AS `count` FROM(
		SELECT  
		CONCAT(CONCAT(YEAR(ys.createTime),"年"),CONCAT(MONTH(ys.createTime),"月")) `type`,
		HOUR(ys.createTime) AS `hour`,
		COUNT(DISTINCT ys.userId) AS userIdCount,
		COUNT(*) AS visitnum,
		ys.createTime AS createDate
		FROM `yg_sys_uservisitlog` ys
		WHERE ys.createTime IS NOT NULL AND ys.userId IS NOT NULL
		GROUP BY 
		DATE_FORMAT(ys.createTime,"%Y-%m-%d"),HOUR(ys.createTime)) a GROUP BY a.`type`
    </select>
    
    
    <!--uv 获取某一年所有月份统计信息-->
    <select id="selectUvCountYearByModule" parameterType="hashmap" resultMap="UserCountMap">
    	<!-- 
        SELECT MONTH(createTime) AS `type`,COUNT(userId) as `count` FROM  yg_sys_uservisitlog AS d
		WHERE YEAR(createTime) = #{selectedYear} AND userId IS NOT NULL AND createTime IS NOT NULL
		GROUP BY MONTH(createTime)
		 -->
		SELECT MONTH(a.createDate) AS `type`,
		SUM(a.userIdCount) AS `count` FROM(
		SELECT  
		CONCAT(CONCAT(YEAR(ys.createTime),"年"),CONCAT(MONTH(ys.createTime),"月")) `type`,
		HOUR(ys.createTime) AS `hour`,
		COUNT(DISTINCT ys.userId) AS userIdCount,
		COUNT(*) AS visitnum,
		ys.createTime AS createDate
		FROM `yg_sys_uservisitlog` ys
		WHERE ys.createTime IS NOT NULL AND ys.userId IS NOT NULL
        <if test="selectedYear !='' and selectedYear != null and selectedYear !='请选择'">
        AND YEAR(ys.createTime) = #{selectedYear}
        </if>
		GROUP BY 
		DATE_FORMAT(ys.createTime,"%Y-%m-%d"),HOUR(ys.createTime)) a GROUP BY a.`type`
    </select>
    
    
    <!--uv 获取某一月所有天统计信息-->
    <select id="selectUvCountMonthByModule" parameterType="hashmap" resultMap="UserCountMap">
        <!-- 
        SELECT DAY(createTime) AS `type`,COUNT(userId) as `count` FROM  yg_sys_uservisitlog AS d
		WHERE MONTH(createTime) = #{selectedMonth} AND userId IS NOT NULL AND createTime IS NOT NULL
		AND YEAR(createTime) = #{selectedYear}
		GROUP BY DAY(createTime)
		 -->
		SELECT DAY(createDate) AS `type`,SUM(userIdCount) AS `count` FROM(
		SELECT  
		DATE_FORMAT(ys.createTime,"%Y-%m-%d") AS `day`,
		HOUR(ys.createTime) AS `hour`,
		COUNT(DISTINCT ys.userId) AS userIdCount,
		ys.createTime AS createDate,
		COUNT(*) AS visitnum 
		FROM `yg_sys_uservisitlog` ys
		WHERE ys.createTime IS NOT NULL AND ys.userId IS NOT NULL
        <if test="selectedYear !='' and selectedYear != null and selectedYear !='请选择'">
        AND YEAR(ys.createTime) = #{selectedYear}
        </if>
        <if test="selectedMonth !='' and selectedMonth != null and selectedMonth !='请选择'">
        AND MONTH(ys.createTime) = #{selectedMonth}
        </if>
		GROUP BY 
		DATE_FORMAT(ys.createTime,"%Y-%m-%d"),HOUR(ys.createTime)) a
		GROUP BY `day`
    </select>
    
    <!--uv 获取某一天所有整点统计信息-->
    <select id="selectUvCountDayByModule" parameterType="hashmap" resultMap="UserCountMap">
    	<!-- 
        SELECT HOUR(createTime) AS `type`,COUNT(userId) as `count` FROM  yg_sys_uservisitlog AS d
		WHERE DAY(createTime) = #{selectedDay} AND userId IS NOT NULL AND createTime IS NOT NULL
		AND YEAR(createTime) = #{selectedYear}
		AND MONTH(createTime) = #{selectedMonth}
		GROUP BY HOUR(createTime)
		 -->
		SELECT  
		HOUR(createTime) AS `type`,
		COUNT(DISTINCT userId) AS `count`
		FROM `yg_sys_uservisitlog`
		WHERE createTime IS NOT NULL AND userId IS NOT NULL
        <if test="selectedYear !='' and selectedYear != null and selectedYear !='请选择'">
            AND YEAR(ys.createTime) = #{selectedYear}
        </if>
        <if test="selectedMonth !='' and selectedMonth != null and selectedMonth !='请选择'">
            AND MONTH(ys.createTime) = #{selectedMonth}
        </if>
        <if test="selectedDay !='' and selectedDay != null and selectedDay !='请选择'">
        AND DAY(createTime) = #{selectedDay}
        </if>
		GROUP BY 
		DATE_FORMAT(createTime,"%Y-%m-%d"),HOUR(createTime)
    </select>
    
    <!-- 用户姓别统计 -->
    <select id="userSexSts" resultType="java.util.Map">
        SELECT t1.users, if(t1.userSex = 1, '男', if(t1.userSex = 2, '女', t1.userSex)) as userSex from (
            SELECT
              if(bs.user_sex is null, '未知', bs.user_sex) as userSex,
              count(1) as users
            from yg_user_info u
            LEFT JOIN yg_user_base_info bs on bs.user_id = u.user_id
            WHERE 1=1
              <if test="null != startDate and null != endDate">
                  AND u.userCreateTime BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
              </if>
            GROUP BY bs.user_sex
        )t1;
    </select>
    
    <!-- 用户年龄统计 -->
    <select id="userAgeSts" resultType="java.util.Map">
        SELECT
            SUM(t3.users) as users,
                if(t3.userAge BETWEEN 0  and 30, '30岁以下',
                if(t3.userAge BETWEEN 30 and 40, '30~40岁',
                if(t3.userAge BETWEEN 40 and 50, '40~50岁',
                if(t3.userAge BETWEEN 50 and 60, '50~60岁',
                if(t3.userAge BETWEEN 60 and 70, '60~70岁',
                if(t3.userAge BETWEEN 70 and 80, '70~80岁', '80以上'))))))
            as userAgeRange
        from (
            SELECT (t2.tuday - t2.birthday) as userAge, t2.users from (
                SELECT
                    CAST(SUBSTRING(bs.user_birthday , 1, 4) AS SIGNED) AS birthday,
                    count(1) as users,
                    CAST(DATE_FORMAT(SYSDATE(), '%Y') AS SIGNED) AS tuday
                from yg_user_info u
                LEFT JOIN yg_user_base_info bs on bs.user_id = u.user_id
                WHERE 1=1
                  <if test="null != startDate and null != endDate">
                      AND u.userCreateTime BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
                  </if>

                GROUP BY birthday
            )t2
        )t3 GROUP BY userAgeRange;
    </select>
    
    <!-- 新增用户统计 -->
    <select id="userAddSts" resultType="java.util.Map">
        SELECT
            count(1) as users,
            DATE_FORMAT(u.userCreateTime, '%Y年%m月%d日') as createTime
        from yg_user_info u
        WHERE 1=1
            <if test="null != startDate and null != endDate">
                AND u.userCreateTime BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            </if>
        GROUP BY createTime
        ORDER BY createTime asc;
    </select>
    
    <!-- 模块访问 -->
    <select id="moduleAccSts" resultType="java.util.Map">
        SELECT
            count(1) as accCounts,
            uv.moduleName as moduleName
        from yg_sys_uservisitlog uv
        WHERE 1=1
            AND uv.logType = 'moduleStats'
            <if test="null != startDate and null != endDate">
                AND uv.createTime BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            </if>
        GROUP BY moduleName;
    </select>
    
    <!-- 终端分布统计 -->
    <select id="terminalRangSts" resultType="java.util.Map">
        SELECT
            count(1) as users,
            if(bs.model_number is null or bs.model_number = '', '未知', bs.model_number) as modelNumber
        from yg_user_info u
        LEFT JOIN yg_user_base_info bs on bs.user_id = u.user_id
        WHERE 1=1
            <if test="null != startDate and null != endDate">
                AND u.userCreateTime BETWEEN DATE_FORMAT(#{startDate}, '%Y-%m-%d') AND DATE_FORMAT(#{endDate}, '%Y-%m-%d')
            </if>
        GROUP BY modelNumber;
    </select>
    
   	 <!-- 更多活跃用户 -->
    <select id="statsActiveUsers" resultMap="UserMap">
    SELECT * from (
        SELECT
        count(1) count ,
        b.user_name type
        FROM
        yg_sys_uservisitlog a
        LEFT OUTER JOIN yg_user_info b ON a.userId = b.user_id
        where b.user_name is not null
        GROUP BY
        a.userId
        order by count desc
        limit 100) b
    </select>
    
    <select id="getActiveUsersCount" resultType="int">
        SELECT count(1) from (
        SELECT
        count(1) count ,
        b.user_name type
        FROM
        yg_sys_uservisitlog a
        LEFT OUTER JOIN yg_user_info b ON a.userId = b.user_id
        where b.user_name is not null
        GROUP BY
        a.userId
        order by count desc
        limit 100) b
    </select>
    
   	<!--  更多活跃机型 -->
    <select id="statsActiveDevices" resultMap="UserMap">
        SELECT
            model_number type ,
            count(1) count
        FROM
            yg_user_base_info
        WHERE
            model_number IS NOT NULL
        GROUP BY
            model_number
        ORDER BY
            count DESC
    </select>
    
    <select id="getActiveDevicesCount" resultType="int">
        SELECT count(1) from (
        SELECT
            model_number type ,
            count(1) count
        FROM
            yg_user_base_info
        WHERE
            model_number IS NOT NULL
        GROUP BY
            model_number
        ORDER BY
            count DESC) b
    </select>
    
    <!-- 更多活跃模块 -->
    <select id="statsActiveModules" resultMap="UserMap">
        SELECT
        count(1) count ,
        moduleName type
        FROM
        yg_sys_uservisitlog a
        where moduleName is not null
        GROUP BY
        moduleName
        order by count desc
    </select>
    
    <select id="getActiveModulesCount" resultType="int">
        SELECT count(1) from (
        SELECT
        count(1) count ,
        moduleName type
        FROM
        yg_sys_uservisitlog a
        where moduleName is not null
        GROUP BY
        moduleName
        order by count desc) b
    </select>
</mapper>
